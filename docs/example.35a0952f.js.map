{"version":3,"sources":["src/index.ts","src/example.tsx"],"names":[],"mappings":"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","file":"example.35a0952f.js","sourceRoot":"..","sourcesContent":["export const keys = <T extends AnyObject>(o: T) => Object.keys(o) as any as Array<keyof T>\n\ntype CTextTag = string | number\ntype CProps<T extends AnyObject> = { children: Array<CElement> } & T\ntype CTextElement<T extends CTextTag> = { type: string; props: CProps<{ nodeValue: T }> }\ntype CElement<T extends AnyObject = AnyObject> = { type: string; props: CProps<T> } | CTextElement<CTextTag>\n\nconst createElement = <T extends AnyObject>(\n\ttype: string,\n\tprops: T = {} as any,\n\t...children: Array<CElement | CTextTag>\n): CElement<T> => ({\n\ttype,\n\tprops: {\n\t\t...props,\n\t\tchildren: children.map(child => (typeof child === \"object\" ? child : createTextElement(child)))\n\t}\n})\n\nconst TEXT_ELEMENT = \"TEXT_ELEMENT\"\nconst createTextElement = <T extends CTextTag>(text: T): CTextElement<T> => ({\n\ttype: TEXT_ELEMENT,\n\tprops: { nodeValue: text, children: [] }\n})\n\nconst createDom = <T extends Pick<Fiber, \"type\" | \"props\">>({ type, props }: T) => {\n\tconst node = type === TEXT_ELEMENT ? document.createTextNode(\"\") : document.createElement(type)\n\tkeys(props)\n\t\t.filter(key => key !== \"children\")\n\t\t.forEach(name => ((node as any)[name] = props[name]))\n\treturn node\n}\n\ntype NFiber = Fiber | null\ntype Fiber<T extends AnyObject = AnyObject> = {\n\tprops: CProps<T>\n\ttype: string\n\tdom: HTMLElement | Text | null\n\tparent: NFiber\n\tchild: NFiber\n\tsibling: NFiber\n}\n\nconst mkFiber = ({ type, props }: CElement, delta: Partial<Fiber> = {}): Fiber => ({\n\ttype,\n\tprops,\n\tparent: null,\n\tdom: null,\n\tchild: null,\n\tsibling: null,\n\t...delta\n})\n\nlet rootFiber: NFiber = null\nlet nextFiber: NFiber = null\n\n// for testing purposes\nlet _requestIdleCallback: typeof requestIdleCallback\nconst init = (requestIdleCb?: typeof requestIdleCallback) => {\n\t_requestIdleCallback = requestIdleCb || requestIdleCallback\n\t_requestIdleCallback(workLoop)\n}\n\nconst buildFibers = (fiber: NFiber, t: IdleDeadline) => {\n\twhile (fiber) {\n\t\tif (t.timeRemaining() < 1) return fiber\n\t\tfiber = buildFiber(fiber)\n\t}\n\treturn null\n}\n\nconst workLoop = (deadline: IdleDeadline) => {\n\tnextFiber = buildFibers(nextFiber, deadline)\n\n\tif (!nextFiber && rootFiber) {\n\t\tcommit(rootFiber.child)\n\t\trootFiber = null\n\t}\n\n\t_requestIdleCallback(workLoop)\n}\n\nconst buildFiber = (fiber: NFiber): NFiber => {\n\tif (!fiber) return null\n\tif (!fiber.dom) fiber.dom = createDom(fiber)\n\n\tbuildFiberChildren(fiber)\n\n\tif (fiber.child) return fiber.child\n\tfor (; fiber; fiber = fiber.parent) if (fiber.sibling) return fiber.sibling\n\treturn null\n}\n\nconst buildFiberChildren = (fiber: Fiber) => {\n\tlet prev: NFiber = null\n\tfiber.props.children\n\t\t.map(child => mkFiber(child, { parent: fiber }))\n\t\t.forEach(child => {\n\t\t\tif (!prev) fiber.child = child\n\t\t\telse prev.sibling = child\n\t\t\tprev = child\n\t\t})\n}\n\nconst render = (element: CElement, dom: HTMLElement) => {\n\tif (!_requestIdleCallback) init()\n\trootFiber = mkFiber({ type: \"ROOT\", props: { children: [element] } }, { dom })\n\tnextFiber = rootFiber\n}\n\nconst commit = (fiber: NFiber) => {\n\tif (!fiber) return\n\n\tconst { parent, child, sibling } = fiber\n\tif (parent && parent.dom && fiber.dom) parent.dom.appendChild(fiber.dom)\n\n\tcommit(child)\n\tcommit(sibling)\n}\n\nexport const CReactInternal = { mkFiber, buildFibers, buildFiber, buildFiberChildren }\nexport const CReact = { createElement, render }\n","/** @jsx CReact.createElement */\nimport { CReact } from \".\"\n\nCReact.render(\n\t<div style=\"color: white; padding: 1em; font-size: 2em\">\n\t\t<h1>This page was generated using own-react</h1>\n\t\t<img src=\"screenshot.png\" />\n\t</div>,\n\tdocument.getElementById(\"root\") as HTMLElement\n)\n"]}