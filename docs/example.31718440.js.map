{"version":3,"sources":["src/index.ts","src/example.tsx"],"names":[],"mappings":"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","file":"example.31718440.js","sourceRoot":"..","sourcesContent":["export type CProps<T extends Obj = Obj> = { children?: Array<CElement> } & T\n\ntype UseStateHook<T> = [T, F1<F1<T, T> | T, void>]\ntype CTextTag = string | number\ntype CTextElement<T extends CTextTag> = { type: string; props: CProps<{ nodeValue: T }> }\ntype CElement<T extends Obj = Obj> = { type: string; props: CProps<T> } | CTextElement<CTextTag>\ntype NFiber = Fiber | null\n\ntype HookBase = { hookTag: Symbol }\ntype InternalUseStateHook<T> = HookBase & { state: T; queue: Array<F1<T, T> | T> }\ntype InternalUseEffectHook = HookBase & { effect: F0<F0 | void> | null; cancel: F0 | null; deps: Array<any> }\n\ntype FnFiber = TypedOmit<Fiber, \"type\"> & {\n\ttype: F1<Obj, CElement>\n\thooks: Array<HookBase>\n}\ntype Key = string | number\n\nconst TEXT_ELEMENT = \"TEXT_ELEMENT\"\nconst WIP_ROOT = \"WIP_ROOT\"\n\nlet currentRoot: NFiber = null\nlet wipRoot: NFiber = null\nlet nextUnitOfWork: NFiber = null\nlet unmountedFibers: Fiber[] = []\nlet wipFiber: FnFiber | null = null\nlet hookIndex: number = 0\n\n// for testing purposes\nlet _requestIdleCallback: typeof requestIdleCallback\n\nexport type Fiber<T extends Obj = Obj> = {\n\tprops: CProps<T>\n\ttype: string\n\tdom: HTMLElement | Text | null\n\tparent: NFiber\n\tchild: NFiber\n\tsibling: NFiber\n\talternate?: NFiber | FnFiber\n\teffectTag?: \"Update\" | \"Add\" | \"Remove\"\n}\n\nconst keys = <T extends Obj>(o: T) => Object.keys(o) as any as Array<keyof T>\nconst createElement = <T extends Obj>(\n\ttype: string,\n\tprops: T = {} as any,\n\t...children: Array<CElement | CTextTag>\n): CElement<T> => ({\n\ttype,\n\tprops: {\n\t\t...props,\n\t\tchildren: children.map(child => (typeof child === \"object\" ? child : createTextElement(child)))\n\t}\n})\n\nconst createTextElement = <T extends CTextTag>(text: T): CTextElement<T> => ({\n\ttype: TEXT_ELEMENT,\n\tprops: { nodeValue: text, children: [] }\n})\n\nconst createDom = <T extends Pick<Fiber, \"type\" | \"props\">>({ type, props }: T) => {\n\tconst dom = type === TEXT_ELEMENT ? document.createTextNode(\"\") : document.createElement(type)\n\tupdateDom(dom, { children: [] }, props)\n\treturn dom\n}\n\nconst isEvent = (key: Key) => key.toString().startsWith(\"on\")\nconst isProp = (key: Key) => key !== \"children\" && !isEvent(key)\nconst isAdded = (prev: Obj, current: Obj) => (key: Key) => prev[key] !== current[key]\nconst isRemoved = (current: Obj) => (key: Key) => !(key in current)\nconst toEventType = (name: Key) => name.toString().toLowerCase().substring(2)\n\nconst getPropertiesDiff = (prev: Obj, current: Obj) => ({\n\tlisteners: {\n\t\tremoved: keys(prev)\n\t\t\t.filter(isEvent)\n\t\t\t.filter(key => !(key in current) || isAdded(prev, current)(key)),\n\t\tadded: keys(current).filter(isEvent).filter(isAdded(prev, current))\n\t},\n\tprops: {\n\t\tremoved: keys(prev).filter(isProp).filter(isRemoved(current)),\n\t\tadded: keys(current).filter(isProp).filter(isAdded(prev, current))\n\t}\n})\n\nconst updateDom = (dom: Fiber[\"dom\"], prev: Obj, current: Obj) => {\n\tif (!dom) return\n\tconst { listeners, props } = getPropertiesDiff(prev, current)\n\tlisteners.removed.forEach(n => dom.removeEventListener(toEventType(n), prev[n] as EventListener))\n\tlisteners.added.forEach(n => dom.addEventListener(toEventType(n), current[n] as EventListener))\n\tprops.removed.filter(n => n in dom).forEach(n => delete (dom as any)[n])\n\tprops.added.forEach(name => ((dom as any)[name] = current[name]))\n}\n\nconst mkFiber = ({ type, props }: CElement, delta: Partial<Fiber> = {}): Fiber => ({\n\ttype,\n\tprops,\n\talternate: null,\n\tparent: null,\n\tdom: null,\n\tchild: null,\n\tsibling: null,\n\t...delta\n})\n\nconst init = (requestIdleCb?: typeof requestIdleCallback) => {\n\t_requestIdleCallback = requestIdleCb || requestIdleCallback\n\t_requestIdleCallback(workLoop)\n}\n\nconst buildFibers = (fiber: NFiber, t: IdleDeadline) => {\n\twhile (fiber) {\n\t\tif (t.timeRemaining() < 1) return fiber\n\t\tfiber = buildFiber(fiber)\n\t}\n\treturn null\n}\n\nconst workLoop = (deadline: IdleDeadline) => {\n\tnextUnitOfWork = buildFibers(nextUnitOfWork, deadline)\n\tif (!nextUnitOfWork && wipRoot) {\n\t\tunmountedFibers.forEach(commitWork)\n\t\tcommitWork(wipRoot.child)\n\t\tcurrentRoot = wipRoot\n\t\twipRoot = null\n\t}\n\t_requestIdleCallback(workLoop)\n}\n\nconst buildFiber = (fiber: NFiber | FnFiber): NFiber => {\n\tif (!fiber) return null\n\n\tif (fiber.type instanceof Function) updateFunctionComponent(fiber as FnFiber)\n\telse updateHostComponent(fiber as Fiber)\n\n\tif (fiber.child) return fiber.child\n\tfor (; fiber; fiber = fiber.parent) if (fiber.sibling) return fiber.sibling\n\treturn null\n}\n\nconst updateFunctionComponent = (fiber: FnFiber) => {\n\twipFiber = fiber\n\thookIndex = 0\n\twipFiber.hooks = []\n\tconst children = [fiber.type(fiber.props)]\n\treconcileChildren(fiber as any as Fiber, children)\n}\n\nconst updateHostComponent = (fiber: Fiber) => {\n\tif (!fiber.dom) fiber.dom = createDom(fiber)\n\treconcileChildren(fiber, fiber.props.children || [])\n}\n\nconst reconcileChildren = (fiber: Fiber, children: Array<CElement>) => {\n\tlet prev: NFiber = null\n\tlet oldFiber = fiber.alternate && fiber.alternate.child\n\n\tfor (let index = 0; index < children.length || oldFiber !== null; index++) {\n\t\tconst el = children[index]\n\t\tlet child: NFiber = null\n\t\tconst sameType = oldFiber && el && el.type === oldFiber.type\n\t\tif (sameType)\n\t\t\tchild = mkFiber(el, { dom: oldFiber?.dom, parent: fiber, alternate: oldFiber, effectTag: \"Update\" })\n\t\tif (!sameType && el) child = mkFiber(el, { dom: null, parent: fiber, alternate: null, effectTag: \"Add\" })\n\t\tif (!sameType && oldFiber) {\n\t\t\toldFiber.effectTag = \"Remove\"\n\t\t\tunmountedFibers.push(oldFiber)\n\t\t}\n\t\tif (oldFiber) oldFiber = oldFiber.sibling\n\t\tif (!prev) fiber.child = child\n\t\telse prev.sibling = child\n\t\tprev = child\n\t}\n}\n\nconst render = (element: CElement, dom: HTMLElement) => {\n\tif (!_requestIdleCallback) init()\n\twipRoot = mkFiber({ type: WIP_ROOT, props: { children: [element] } }, { dom, alternate: currentRoot })\n\tunmountedFibers = []\n\tnextUnitOfWork = wipRoot\n}\n\nconst commitDeletion = (fiber: Fiber, domParent: HTMLElement) => {\n\tif (fiber.dom) domParent.removeChild(fiber.dom)\n\telse commitDeletion(fiber.child as Fiber, domParent)\n}\n\nconst commitWork = (fiber: NFiber) => {\n\tif (!fiber) return\n\n\tlet domParentFiber: Fiber = fiber.parent as Fiber\n\twhile (!domParentFiber.dom) domParentFiber = domParentFiber.parent as Fiber\n\tconst domParent = domParentFiber.dom\n\tswitch (fiber.effectTag) {\n\t\tcase \"Add\":\n\t\t\tif (fiber.dom !== null) domParent.appendChild(fiber.dom)\n\t\t\trunEffects(fiber as unknown as FnFiber)\n\t\t\tbreak\n\t\tcase \"Update\":\n\t\t\tupdateDom(fiber.dom as any, fiber.alternate?.props || { children: [] }, fiber.props)\n\t\t\trunEffects(fiber as unknown as FnFiber)\n\t\t\tbreak\n\t\tcase \"Remove\":\n\t\t\tcancelEffects(fiber as unknown as FnFiber)\n\t\t\tcommitDeletion(fiber, domParent as HTMLElement)\n\t\t\tbreak\n\t}\n\n\tcommitWork(fiber.child)\n\tcommitWork(fiber.sibling)\n}\n\nconst getPrevHook = () => {\n\tif (!wipFiber) return null\n\tconst alternate = wipFiber.alternate as FnFiber\n\tif (!alternate || !alternate.hooks || !alternate.hooks[hookIndex]) return null\n\tconst hook = alternate.hooks[hookIndex]\n\treturn isHook(hook) ? hook : null\n}\n\nconst useStateTag = Symbol(\"useState\")\nconst useEffectTag = Symbol(\"useEffect\")\n\nconst isHook = (v: unknown): v is HookBase => (v as HookBase).hookTag !== undefined\nconst isUseEffectHook = (v: unknown): v is InternalUseEffectHook => (v as HookBase).hookTag === useEffectTag\n\nconst runEffects = ({ hooks }: FnFiber) => {\n\tconst hs = (hooks || []).filter(isUseEffectHook)\n\ths.forEach(h => (h.cancel = h.effect ? (h.effect as F0<F0>)() : null))\n}\n\nconst cancelEffects = ({ hooks }: FnFiber) => (hooks || []).filter(isUseEffectHook).forEach(h => h.cancel && h.cancel())\n\nconst areEqual = <T = any>(prev: Array<T> | null, current: Array<T>) =>\n\tprev !== null && prev.length === current.length && prev.every((dep, index) => dep === current[index])\n\nconst useEffect = (effect: F0<F0 | void>, deps: Array<any>) => {\n\tconst prevHook = getPrevHook() as InternalUseEffectHook | null\n\tconst changed = areEqual(prevHook ? prevHook.deps : null, deps) === false\n\tconst hook: InternalUseEffectHook = {\n\t\thookTag: useEffectTag,\n\t\teffect: changed ? effect : null,\n\t\tcancel: changed && prevHook ? prevHook.cancel : null,\n\t\tdeps\n\t}\n\tif (wipFiber) wipFiber.hooks.push(hook)\n\n\thookIndex++\n}\n\nconst useState = <T>(initial: T): UseStateHook<T> => {\n\tconst prevHook = getPrevHook() as InternalUseStateHook<T> | null\n\tconst hook: InternalUseStateHook<T> = { state: prevHook?.state || initial, queue: [], hookTag: useStateTag }\n\thook.state = (prevHook?.queue || []).reduce(\n\t\t(acc: T, action) => (action instanceof Function ? action(acc) : action),\n\t\thook.state\n\t)\n\n\tconst setState = (action: F1<T, T> | T) => {\n\t\thook.queue.push(action)\n\t\tnextUnitOfWork = wipRoot = mkFiber(\n\t\t\t{ type: WIP_ROOT, props: currentRoot?.props || {} },\n\t\t\t{ dom: currentRoot?.dom || null, alternate: currentRoot }\n\t\t)\n\t\tunmountedFibers = []\n\t}\n\n\tif (wipFiber) wipFiber.hooks.push(hook)\n\thookIndex++\n\treturn [hook.state, setState]\n}\n\nexport const CReact = { createElement, useState, useEffect, render }\n\nexport const CReactInternal = {\n\tmkFiber,\n\tbuildFibers,\n\tbuildFiber,\n\treconcileChildren,\n\tupdateDom,\n\tgetPropertiesDiff,\n\tareEqual\n}\n","/** @jsx CReact.createElement */\nimport { CProps, CReact } from \".\"\n\nconst App = (p: CProps<{ initialText: string }>) => {\n\tconst [text, setText] = CReact.useState(p.initialText)\n\tconst [changes, setChanges] = CReact.useState(0)\n\n\tCReact.useEffect(() => {\n\t\tconsole.log(changes)\n\t}, [changes])\n\n\tconst ch = (v: number) => Math.floor((v + changes * v) % 256)\n\n\treturn (\n\t\t<div style={`color: rgb(${ch(122)}, ${ch(144)}, ${ch(87)}); padding: 1em; font-size: 2em;`}>\n\t\t\t<h1>This page was generated using own-react</h1>\n\t\t\t<input\n\t\t\t\tonInput={(e: any) => {\n\t\t\t\t\tsetText(e.target.value)\n\t\t\t\t\tsetChanges(p => p + 1)\n\t\t\t\t}}\n\t\t\t\tvalue={text}\n\t\t\t\tautofocus\n\t\t\t/>\n\t\t\t<h1>changes count: {changes}</h1>\n\t\t\t<img src=\"screenshot.png\" />\n\t\t</div>\n\t)\n}\n\nCReact.render(<App initialText=\"type something\" />, document.getElementById(\"root\") as HTMLElement)\n"]}