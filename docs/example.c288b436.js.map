{"version":3,"sources":["src/index.ts","src/example.tsx"],"names":[],"mappings":"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","file":"example.c288b436.js","sourceRoot":"..","sourcesContent":["type CTextTag = string | number\ntype CProps<T extends AnyObject> = { children: Array<CElement> } & T\n\nexport type CTextElement<T extends CTextTag> = { type: string; props: CProps<{ nodeValue: T }> }\nexport type CElement<T extends AnyObject = AnyObject> = { type: string; props: CProps<T> } | CTextElement<CTextTag>\n\nconst createElement = <T extends AnyObject>(\n\ttype: string,\n\tprops: T = {} as any,\n\t...children: Array<CElement | CTextTag>\n): CElement<T> => ({\n\ttype,\n\tprops: {\n\t\t...props,\n\t\tchildren: children.map(child => (typeof child === \"object\" ? child : createTextElement(child)))\n\t}\n})\n\nconst TEXT_ELEMENT = \"TEXT_ELEMENT\"\nconst createTextElement = <T extends CTextTag>(text: T): CTextElement<T> => ({\n\ttype: TEXT_ELEMENT,\n\tprops: { nodeValue: text, children: [] }\n})\n\nconst keys = <T extends AnyObject>(o: T) => Object.keys(o) as any as Array<keyof T>\n\nconst createDom = <T extends Pick<Fiber, \"type\" | \"props\">>({ type, props }: T) => {\n\tconst node = type === TEXT_ELEMENT ? document.createTextNode(\"\") : document.createElement(type)\n\tkeys(props)\n\t\t.filter(key => key !== \"children\")\n\t\t.forEach(name => ((node as any)[name] = props[name]))\n\treturn node\n}\n\ntype NFiber = Fiber | null\nexport type Fiber<T extends AnyObject = AnyObject> = {\n\tprops: CProps<T>\n\ttype: string\n\tdom: HTMLElement | Text | null\n\tparent: NFiber\n\tchild: NFiber\n\tsibling: NFiber\n}\n\nexport const Fiber = ({ type, props }: CElement, parent: NFiber = null): Fiber => ({\n\ttype,\n\tprops,\n\tparent,\n\tdom: null,\n\tchild: null,\n\tsibling: null\n})\n\nlet nextUnitOfWork: NFiber = null\nlet rootFiber: NFiber = null\n\nconst workLoop = (deadline: IdleDeadline) => {\n\tfor (let pause = false; nextUnitOfWork && !pause; pause = deadline.timeRemaining() < 1)\n\t\tnextUnitOfWork = performUnitOfWork(nextUnitOfWork)\n\trequestIdleCallback(workLoop)\n}\n\nexport const buildChildren = (fiber: Fiber) => {\n\tlet prev: NFiber = null\n\tfiber.props.children\n\t\t.map(child => Fiber(child, fiber))\n\t\t.forEach(current => {\n\t\t\tif (!prev) fiber.child = current\n\t\t\telse prev.sibling = current\n\t\t\tprev = current\n\t\t})\n}\n\nconst performUnitOfWork = (fiber: Fiber): NFiber => {\n\tif (!fiber.dom) fiber.dom = createDom(fiber)\n\tif (fiber.parent) fiber.parent.dom?.appendChild(fiber.dom)\n\n\tbuildChildren(fiber)\n\n\tif (fiber.child) return fiber.child\n\n\tfor (let f: NFiber = fiber; f; f = f.parent) if (f.sibling) return f.sibling\n\n\treturn null\n}\nconst render = (element: CElement, dom: HTMLElement) => {\n\trootFiber = {\n\t\tdom,\n\t\tprops: { children: [element] },\n\t\tparent: null,\n\t\tchild: null,\n\t\tsibling: null,\n\t\ttype: \"ROOT\"\n\t}\n\tnextUnitOfWork = rootFiber\n}\nconst init = () => requestIdleCallback(workLoop)\nconst blockingRender = ({ type, props }: CElement, dest: HTMLElement) => {\n\tconst node = createDom({ type, props })\n\tif (type !== TEXT_ELEMENT) props.children.forEach(child => blockingRender(child, node as HTMLElement))\n\tdest.appendChild(node)\n}\nexport const CReact = { createElement, render, blockingRender, init }\n","/** @jsx CReact.createElement */\nimport { CReact } from \".\"\nCReact.init()\nCReact.render(\n\t<div style=\"background: grey; color: white; text-align:center; padding: 1em; font-size: 4em\">\n\t\t<h1>This text was generated using cReact</h1>\n\t</div>,\n\tdocument.getElementById(\"root\") as HTMLElement\n)\n"]}